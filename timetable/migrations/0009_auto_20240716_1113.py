# Generated by Django 4.2.13 on 2024-07-16 08:13

from django.db import migrations
from django.contrib.auth.hashers import make_password


def create_super_Teacher_group(apps, schema_editor):
    if not apps.get_model('auth', 'Group').objects.filter(name="Super teacher").exists():
        Group = apps.get_model('auth', 'Group')
        permission = apps.get_model('auth', 'Permission').objects.get(codename="add_classneedssub")
        g = Group.objects.create()
        g.name = "Super teacher"
        g.permissions.add(permission)
        g.save()


def create_schedule_group(apps, schema_editor):
    if not apps.get_model('auth', 'Group').objects.filter(name="Schedule").exists():
        Group = apps.get_model('auth', 'Group')
        permission = apps.get_model('auth', 'Permission').objects.get(codename="add_class")
        g = Group.objects.create(name="Schedule")
        g.permissions.add(permission)
        g.save()


def create_super_user(apps, schema_editor):
    if not apps.get_model('timetable', 'teacher').objects.filter(username="Delete_Me").exists():
        user = apps.get_model('timetable', 'teacher').objects.create()
        user.username = "Delete_Me"
        user.is_superuser = True
        user.is_active = True
        user.is_staff = True
        user.email = "example@example.org"
        user.phone_number = "1234567890"
        user.password = make_password("example")
        user.save()


class Migration(migrations.Migration):
    dependencies = [
        ('timetable', '0008_rename_students_teacher_class_student_teacher'),
    ]

    operations = [
        migrations.RunPython(create_super_user),
        migrations.RunPython(create_super_Teacher_group),
        migrations.RunPython(create_schedule_group),
    ]
