# Generated by Django 4.2.13 on 2024-09-03 19:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('can_substitute', models.BooleanField(default=True)),
                ('Sunday', models.BooleanField(default=True)),
                ('Monday', models.BooleanField(default=True)),
                ('Tuesday', models.BooleanField(default=True)),
                ('Wednesday', models.BooleanField(default=True)),
                ('Thursday', models.BooleanField(default=True)),
                ('tutor', models.BooleanField(default=False)),
                ('shocher', models.BooleanField(default=False)),
                ('manage_subs', models.BooleanField(default=False)),
                ('manage_schedule', models.BooleanField(default=False)),
                ('last_sub', models.DateField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('day_of_week', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday')], default='', max_length=100)),
                ('hour', models.TimeField(choices=[(datetime.time(9, 15), '09:15'), (datetime.time(10, 7), '10:07'), (datetime.time(11, 0), '11:00'), (datetime.time(11, 45), '11:45'), (datetime.time(12, 45), '12:45')])),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('student_teacher', models.BooleanField(default=False, verbose_name='Is a Student Teaching?')),
                ('student_teaching', models.CharField(blank=True, max_length=100, null=True, verbose_name='Student Teaching')),
                ('first_grade', models.BooleanField(default=False, verbose_name='First Grade')),
                ('second_grade', models.BooleanField(default=False, verbose_name='Second Grade')),
                ('third_grade', models.BooleanField(default=False, verbose_name='Third Grade')),
                ('fourth_grade', models.BooleanField(default=False, verbose_name='Fourth Grade')),
                ('fifth_grade', models.BooleanField(default=False, verbose_name='Fifth Grade')),
                ('sixth_grade', models.BooleanField(default=False, verbose_name='Sixth Grade')),
                ('seventh_grade', models.BooleanField(default=False, verbose_name='Seventh Grade')),
                ('eighth_grade', models.BooleanField(default=False, verbose_name='Eighth Grade')),
                ('ninth_grade', models.BooleanField(default=False, verbose_name='Ninth Grade')),
                ('tenth_grade', models.BooleanField(default=False, verbose_name='Tenth Grade')),
                ('eleventh_grade', models.BooleanField(default=False, verbose_name='Eleventh Grade')),
                ('twelfth_grade', models.BooleanField(default=False, verbose_name='Twelfth Grade')),
            ],
            options={
                'permissions': (('see_classes', 'can add classes'),),
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('has_projector', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=10)),
                ('grade', models.IntegerField(choices=[(0, 'First Grade'), (1, 'Second Grade'), (2, 'Third Grade'), (3, 'Fourth Grade'), (4, 'Fifth Grade'), (5, 'Sixth Grade'), (6, 'Seventh Grade'), (7, 'Eighth Grade'), (8, 'Ninth Grade'), (9, 'Tenth Grade'), (10, 'Eleventh Grade'), (11, 'Twelfth Grade')], default='')),
                ('last_schedule_invite', models.DateTimeField(blank=True, null=True)),
                ('shacharit', models.ForeignKey(blank=True, limit_choices_to={'shocher': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shacharit', to=settings.AUTH_USER_MODEL)),
                ('tutor', models.ForeignKey(blank=True, limit_choices_to={'tutor': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday_first', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Monday', 'hour': datetime.time(9, 15)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monday_first_classes', to='timetable.class', verbose_name='שני 09:15')),
                ('monday_fourth', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Monday', 'hour': datetime.time(12, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monday_fourth_classes', to='timetable.class', verbose_name='שני 12:45')),
                ('monday_second', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Monday', 'hour': datetime.time(10, 7)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monday_second_classes', to='timetable.class', verbose_name='שני 10:07')),
                ('monday_third', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Monday', 'hour': datetime.time(11, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monday_third_classes', to='timetable.class', verbose_name='שני 11:45')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='timetable.student')),
                ('sunday_first', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Sunday', 'hour': datetime.time(9, 15)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sunday_first_classes', to='timetable.class', verbose_name='ראשון 09:15')),
                ('sunday_fourth', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Sunday', 'hour': datetime.time(12, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sunday_fourth_classes', to='timetable.class', verbose_name='ראשון 12:45')),
                ('sunday_second', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Sunday', 'hour': datetime.time(10, 7)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sunday_second_classes', to='timetable.class', verbose_name='ראשון 10:07')),
                ('sunday_third', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Sunday', 'hour': datetime.time(11, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sunday_third_classes', to='timetable.class', verbose_name='ראשון 11:45')),
                ('thursday_first', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Thursday', 'hour': datetime.time(9, 15)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thursday_first_classes', to='timetable.class', verbose_name='חמישי 09:15')),
                ('thursday_second', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Thursday', 'hour': datetime.time(10, 7)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thursday_second_classes', to='timetable.class', verbose_name='חמישי 10:07')),
                ('tuesday_first', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Tuesday', 'hour': datetime.time(9, 15)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tuesday_first_classes', to='timetable.class', verbose_name='שלישי 09:15')),
                ('tuesday_fourth', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Tuesday', 'hour': datetime.time(12, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tuesday_fourth_classes', to='timetable.class', verbose_name='שלישי 12:45')),
                ('tuesday_second', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Tuesday', 'hour': datetime.time(10, 7)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tuesday_second_classes', to='timetable.class', verbose_name='שלישי 10:07')),
                ('tuesday_third', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Tuesday', 'hour': datetime.time(11, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tuesday_third_classes', to='timetable.class', verbose_name='שלישי 11:45')),
                ('wednesday_first', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Wednesday', 'hour': datetime.time(9, 15)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wednesday_first_classes', to='timetable.class', verbose_name='רביעי 09:15')),
                ('wednesday_fourth', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Wednesday', 'hour': datetime.time(12, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wednesday_fourth_classes', to='timetable.class', verbose_name='רביעי 12:45')),
                ('wednesday_second', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Wednesday', 'hour': datetime.time(10, 7)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wednesday_second_classes', to='timetable.class', verbose_name='רביעי 10:07')),
                ('wednesday_third', models.ForeignKey(blank=True, limit_choices_to={'day_of_week': 'Wednesday', 'hour': datetime.time(11, 45)}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wednesday_third_classes', to='timetable.class', verbose_name='רביעי 11:45')),
            ],
        ),
        migrations.CreateModel(
            name='ClassNeedsSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('Class_That_Needs_Sub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.class')),
                ('substitute_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('see_subs', 'can Set Substitutions'),),
            },
        ),
        migrations.AddField(
            model_name='class',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.room'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.CharField(max_length=100)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
